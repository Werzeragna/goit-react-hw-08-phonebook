{"version":3,"file":"static/js/380.e54db4bf.chunk.js","mappings":"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","sources":["hooks/useHooks.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Toasts.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../redux/contacts/contactsSlice';\nimport {\n  getContacts,\n  addContact,\n  deleteContact,\n} from '../redux/contacts/contactsOperations';\n\nexport const useContacts = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(state => state.contacts.filter);\n  const contacts = useSelector(state => state.contacts.items);\n  const isLoaging = useSelector(state => state.contacts.loader);\n  const error = useSelector(state => state.contacts.error);\n\n  const setFilter = value => {\n    dispatch(changeFilter(value));\n  };\n\n  const inGetContacts = () => {\n    dispatch(getContacts());\n  };\n\n  const inAddContact = data => {\n    dispatch(addContact(data));\n  };\n\n  const inDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return {\n    filter,\n    contacts,\n    isLoaging,\n    error,\n    setFilter,\n    inGetContacts,\n    inAddContact,\n    inDeleteContact,\n  };\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  max-width: 500px;\n  margin: 0 auto;\n  margin-bottom: 20px;\n  padding: 20px;\n`;\n\nexport const Input = styled.input`\n  margin: 10px 0;\n  padding: 5px 10px;\n  width: 100%;\n  outline: none;\n  font-size: 24px;\n  color: var(--secondary);\n  background-color: transparent;\n  border: none;\n  border-radius: 5px;\n  box-shadow: inset -2px -2px 5px #d1d1d1, inset 3px 3px 5px rgba(0, 0, 0, 0.1);\n`;\n\nexport const Btn = styled.button`\n  padding: 10px 25px;\n  margin: 0 130px;\n  font-size: 24px;\n  font-weight: 500;\n  color: var(--accent-btn);\n  background-color: transparent;\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n  transition: all 250ms ease-in-out;\n  box-shadow: inset -2px -2px 5px #d1d1d1, inset 3px 3px 5px rgba(0, 0, 0, 0.1);\n  :hover {\n    color: var(--accent);\n    background-color: var(--bg);\n    box-shadow: none;\n  }\n`;\n","import { useState } from 'react';\nimport { useContacts } from '../../hooks/useHooks';\nimport { Form, Input, Btn } from './ContactForm.styled';\nimport { infoToast, successToast } from '../Toasts';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { contacts, inAddContact } = useContacts();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const enterContacts = contacts.some(\n      i => i.name.toLowerCase() === name.toLowerCase() || i.number === number\n    );\n    enterContacts\n      ? infoToast(`${name} is already in contacts`)\n      : inAddContact({ name, number });\n    !enterContacts && successToast('The contact is in the list!');\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n        placeholder=\"Name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleChange}\n        placeholder=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <Btn type=\"submit\">Add contact</Btn>\n    </Form>\n  );\n};\n","import { toast } from 'react-toastify';\n\nexport const successToast = text => {\n  toast.success(text, {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n\nexport const infoToast = text => {\n  toast.info(text, {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n\nexport const deleteToast = text => {\n  toast.error(text, {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  max-width: 350px;\n  margin: 0 auto;\n  margin-bottom: 20px;\n  padding: 20px;\n`;\n\nexport const Input = styled.input`\n  padding: 5px 10px;\n  font-size: 24px;\n  color: var(--secondary);\n  background-color: transparent;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  box-shadow: inset -2px -2px 5px #ffffff, inset 3px 3px 5px rgba(0, 0, 0, 0.1);\n`;\n","import { useContacts } from '../../hooks/useHooks';\nimport { Input, Form } from './Filter.styled';\n\nexport const Filter = () => {\n  const { filter, setFilter } = useContacts();\n  return (\n    <Form>\n      <label>\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={e => setFilter(e.target.value)}\n          placeholder=\"Find contacts by name\"\n        />\n      </label>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Contacts = styled.ul`\n  max-width: 800px;\n  margin: 0 auto;\n  margin-top: 30px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 15px;\n`;\n\nexport const ContactsItem = styled.li`\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  box-shadow: -2px -2px 5px #ffffff, 3px 3px 5px rgba(0, 0, 0, 0.1);\n  border-radius: 5px;\n`;\n\nexport const User = styled.p`\n  text-align: left;\n  font-weight: 500;\n  font-size: 18px;\n  text-shadow: -2px -2px 5px #ffffff, 3px 3px 5px rgba(0, 0, 0, 0.1);\n`;\n\nexport const Btn = styled.button`\n  padding: 5px 15px;\n  flex-basis: 15%;\n  font-size: 18px;\n  font-weight: 500;\n  color: var(--accent-btn);\n  background-color: transparent;\n  border-radius: 5px;\n  border: none;\n  box-shadow: inset -2px -2px 5px #d1d1d1, inset 3px 3px 5px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n  transition: all 250ms ease-in-out;\n  :hover {\n    color: var(--accent);\n    background-color: var(--bg);\n    box-shadow: none;\n  }\n`;\n","import { Loader } from '../Loader/Loader';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useContacts } from '../../hooks/useHooks';\nimport { getContacts } from '../../redux/contacts/contactsOperations';\nimport { useSelector } from 'react-redux';\nimport { getIsLoggedIn } from '../../redux/auth/authSelectors';\nimport { Btn, Contacts, ContactsItem, User } from './ContactList.styled';\nimport { deleteToast } from '../Toasts';\n\nexport const ContactList = () => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n\n  const dispatch = useDispatch();\n  const { contacts, isLoaging, filter, inDeleteContact, setFilter } =\n    useContacts();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  const findContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    if (contacts) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n  };\n\n  const filteredContacts = findContacts();\n\n  return (\n    <>\n      {isLoaging && <Loader />}\n      {isLoggedIn && (\n        <Contacts>\n          {contacts &&\n            filteredContacts.map(({ id, name, number }) => {\n              return (\n                <ContactsItem key={id}>\n                  <User>\n                    {name}: {number}\n                  </User>\n                  <Btn\n                    type=\"button\"\n                    onClick={() => {\n                      inDeleteContact(id);\n                      deleteToast(`${name} tel:${number} is deleted`);\n                      setFilter('');\n                    }}\n                  >\n                    Delete\n                  </Btn>\n                </ContactsItem>\n              );\n            })}\n        </Contacts>\n      )}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  display: flex;\n  justify-content: center;\n  font-weight: 800;\n  font-size: 36px;\n  color: var(--secondary);\n`;\nexport const ContactsContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  padding: 50px;\n  background-color: var(--secondary-bg);\n`;\n","import { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { ContactsContainer, Title } from './Contacts.styled';\n\nconst Contacts = () => {\n  return (\n    <ContactsContainer>\n      <Title>Enter a name and phone number to add a contact</Title>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </ContactsContainer>\n  );\n};\n\nexport default Contacts;\n"],"names":["useContacts","dispatch","useDispatch","filter","useSelector","state","contacts","items","isLoaging","loader","error","setFilter","value","changeFilter","inGetContacts","getContacts","inAddContact","data","addContact","inDeleteContact","id","deleteContact","Form","styled","Input","Btn","ContactForm","useState","name","setName","number","setNumber","handleChange","e","target","onSubmit","preventDefault","text","enterContacts","some","i","toLowerCase","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","successToast","type","onChange","placeholder","pattern","title","required","Filter","Contacts","ContactsItem","User","ContactList","isLoggedIn","getIsLoggedIn","useEffect","filteredContacts","normalizedFilter","contact","includes","findContacts","Loader","map","onClick","Title","ContactsContainer"],"sourceRoot":""}